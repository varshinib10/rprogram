a->10
a<-10
v1<-c(1,2,3)
v2<- c("ram","sheela","human")
v3<-c(100,200,300)
d1=data.frame(v1,v2,v3)
d1
install.packages("shiny")
library(shiny)
library(shiny)
detach("package:shiny", unload = TRUE)
q()
?shiny()
install.packages("shiny")
library(shiny)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='varshu',
token='E168479A848B7771CFB5EBB517C91786',
secret='l7PBfjzqBJ4xBYX9r1v8xaTAR5RgoAfZIBdrdj9w')
library(shiny)
library(dplyr)
# UI
ui <- fluidPage(
titlePanel("Simple COVID-19 Tracker"),
sidebarLayout(
sidebarPanel(
selectInput("country", "Select Country:",
choices = c("USA", "India", "Brazil"))
),
mainPanel(
plotOutput("plot")
)
)
)
# Load the Shiny package
library(shiny)
# Load the Shiny package
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
# Define the server logic
server <- function(input, output) {
# Reactive expression to calculate the square of the number
output$result <- renderText({
paste("The square of", input$num, "is:", input$num^2)
})
}
# Run the application
shinyApp(ui = ui, server = server)
q()
library(shiny)
ui <- fluidPage(
titlePanel("Boxplot Example"),
sidebarLayout(
sidebarPanel(
sliderInput("groups", "Number of Groups:", min = 2, max = 5, value = 3)
),
mainPanel(
plotOutput("boxPlot")
)
)
)
server <- function(input, output) {
output$boxPlot <- renderPlot({
boxplot(split(rnorm(100), rep(1:input$groups, each = 20)), col = "orange", main = "Boxplot")
})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Line Chart"),
sidebarLayout(
sidebarPanel(
numericInput("points", "Number of Points:", value = 30, min = 10, max = 100)
),
mainPanel(
plotOutput("lineChart")
)
)
)
server <- function(input, output) {
output$lineChart <- renderPlot({
x <- 1:input$points
y <- cumsum(rnorm(input$points))
plot(x, y, type = "o", col = "darkgreen", main = "Line Chart", xlab = "Index", ylab = "Values")
})
}
shinyApp(ui = ui, server = server)
runApp('rstdio/line_chart.R')
shiny::runApp('rstdio')
